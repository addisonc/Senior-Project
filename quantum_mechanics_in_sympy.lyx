#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Quantum Mechanics and Quantum Computation in Sympy
\end_layout

\begin_layout Author
Addison Cugini
\end_layout

\begin_layout Date
05/27/2011
\end_layout

\begin_layout Part
Density Operator Formalism
\end_layout

\begin_layout Standard
In real situations found in the lab, an experimentalist cannot know with
 certainty what state a system is in.
 Students of quantum mechanics tend to focus on how a well known state vector
 of a system evolves.
 If the quantum state is not completely known beforehand, that is if there
 is a certain classical uncertainty as to what state a system is in, the
 density operator formalism more naturally describes the system.
 In this way, the density operator is useful for modeling systems where
 both classical uncertainty and quantum superpositions are present.
 This is useful for real systems in which the whole history of a system
 may be impossible to account for.
\end_layout

\begin_layout Subsection
Density Operator Defined
\end_layout

\begin_layout Standard
If a system is in a state 
\begin_inset ERT
status open

\begin_layout Plain Layout

$|
\backslash
psi_{n}>$
\end_layout

\end_inset

 with a certain probability 
\begin_inset ERT
status open

\begin_layout Plain Layout
$W_{n}$
\end_layout

\end_inset

, such that 
\begin_inset ERT
status open

\begin_layout Plain Layout
$
\backslash
sum
_{n}
\lang english
 W_{n} = 1$
\end_layout

\end_inset

 (That is the system is normalized such that it must be in one of the ensemble
 of given states).
 Then the density operator which defines the system is defined by:
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rho = 
\backslash
sum_{n} W_{n}|
\backslash
psi_{n}><
\backslash
psi_{n}|$
\end_layout

\end_inset

.
 (Note that the states 
\begin_inset ERT
status open

\begin_layout Plain Layout
$|
\backslash
psi_{n}>$
\end_layout

\end_inset

 need not be orthoganol).
 
\end_layout

\begin_layout Standard
In a discrete basis, the density operator takes the form of a matrix where
 the i-th and j-th matrix element is determined by the equation: 
\begin_inset ERT
status open

\begin_layout Plain Layout

$<
\backslash
phi_{i}|
\backslash
rho|
\backslash
phi_{j}> = 
\backslash
sum_{n} W_{n} a_{i}^{n} a_{j}^{n*}$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
(Blum, page 43)
\end_layout

\begin_layout Subsection
Density Operators in Sympy
\end_layout

\begin_layout Subsection
Matrix to Dirac Notation for a Density Operator
\end_layout

\begin_layout Standard
It is possible to take in a density matrix which represents the state of
 a system and determine a representation as a series of outerproducts of
 states using the eigenvalues and eigenvectors of the matrix.
 For a density matrix, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rho$
\end_layout

\end_inset

, with eigenvalues 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
lambda_{n}$
\end_layout

\end_inset

 and associated eigenvectors 
\begin_inset ERT
status open

\begin_layout Plain Layout

$|
\backslash
psi_{n}>$
\end_layout

\end_inset

, the matrix can be represented as 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rho = 
\backslash
sum_{n} 
\backslash
lambda_{n} |
\backslash
psi_{n}><
\backslash
psi_{n}|$
\end_layout

\end_inset

 For a non-pure state the dirac notation representation is not unique, so
 the returned result might not be the same set of states as one may expect.
 In Sympy, this is implemented in a seperate function 
\begin_inset Quotes eld
\end_inset

matrix_to_density
\begin_inset Quotes erd
\end_inset

.
 This is seen in the following code example: 
\end_layout

\begin_layout Subsection
Von Neumann Entropy
\end_layout

\begin_layout Standard
An important concept which can be easily determined from the density operator
 formalism is the entropy of a system.
 In rough terms, the entropy of a system measures the amount of uncertainty
 we have about what state the system is in.
 
\end_layout

\begin_layout Standard
The entropy of a system can be determined by taking the eigenvalues 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
lambda_{n}$
\end_layout

\end_inset

 of the density operator 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rho$
\end_layout

\end_inset

 and preforming the operation: 
\begin_inset ERT
status open

\begin_layout Plain Layout

$S = -
\backslash
sum_{n} 
\backslash
lambda_{n} log(
\backslash
lambda_{n})$
\end_layout

\end_inset

.
 It is easy to show (see appendix) that when the system is in a pure state,
 the only non-zero eigenvalue of the density matrix is 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
lambda = 1$
\end_layout

\end_inset

.
 Plugging this eigenvalue into our equation for the Von Neumann entropy,
 we see that a pure state has zero entropy.
 This matches with our intuition as a perfectly well known system (a pure
 state) should not have any entropy.
\end_layout

\begin_layout Standard
In sympy, the Von Neumann entropy is implemented for discrete systems using
 a method within the Density class.
 This method determines the eigenvalues of the density matrix by representing
 the operator as a matrix and making calls to the sympy function which determine
s eigenvalues.
 The eigenvalues are then plugged into the equation for the Von Neumann
 entropy.
 This can be seen in the following code example:
\end_layout

\begin_layout Standard
\start_of_appendix
Proof that 1 is the only non-zero eigenvalue for a pure state:
\end_layout

\begin_layout Standard
Suppose we have a generic pure state density matrix defined by 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rho = |
\backslash
psi><
\backslash
psi|$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The eigenvalue problem for 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rho$
\end_layout

\end_inset

 is 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rho|
\backslash
phi> = 
\backslash
lambda |
\backslash
phi>$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It is clear that 
\begin_inset ERT
status open

\begin_layout Plain Layout

$|
\backslash
phi> = |
\backslash
psi>$
\end_layout

\end_inset

 is a solution for this eigenvector problem as 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rho |
\backslash
psi> = |
\backslash
psi><
\backslash
psi|
\backslash
psi> = |
\backslash
psi>$
\end_layout

\end_inset

 (since the inner product 
\begin_inset ERT
status open

\begin_layout Plain Layout

$<
\backslash
psi|
\backslash
psi> = 1$
\end_layout

\end_inset

 .
 Note that 1 is eigenvalue associated with the eigenvector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$|
\backslash
psi>$
\end_layout

\end_inset

.
 Since we know that 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sum_{n} 
\backslash
lambda_{n} = 1$
\end_layout

\end_inset

, the other eigenvalues must be zero.
 QED.
\end_layout

\end_body
\end_document
